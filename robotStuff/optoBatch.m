e% ************** MATLAB "M" script (jim Patton) *************
% Nonlinear optimization fits of single copycat (multiple analyses)
% (fit of the copycat approach to Sys ID)
% SYNTAX:    
% INPUTS:    
% OUTPUTS:  
% VERSIONS:  6/10/00 INIT
%~~~~~~~~~~~~~~~~~~~~~~ Begin Program: ~~~~~~~~~~~~~~~~~~~~~~~~

% ___setup___
global DEBUGIT M L R g EPpas Kpas Bpas field_gain field_type
global RCB rc
scriptName='optoBatch.m';
resultsFileName=[scriptName '.txd'];
fprintf('\n\n\n~ %s SCRIPT ~\n',scriptName)             % title message
if ~exist('plotIt'), plotIt=1; end                      % if not passed

if 1
  playwav('menu.wav');                                    % reminder sound
  startSubj=menu('Choose start trial:','30','31','32' ... %
    ,'33','34','35','36')+29                                   %
  endSubj=menu('Choose end   trial:','30','31','32'   ... %
    ,'33','34','35','36')+29
else
  cd C:\jim\researchProjects\field_design\experiments
  startSubj=30
  endSubj=36
end
fitOrNot=1;

% ====== BIG LOOP FOR SUBJECTS =======
for subject=startSubj:endSubj,                          % subj loop
  eval(['cd pilot' num2str(subject)]); 
  cd; 
  eval(['diary ' scriptName '.log']);                   % keep record of this
  fprintf('\n\n\n~ BEGIN analysis for %s at %s ~\n' ... %
    ,cd,whenis(clock))                                  %   
  set_params;
  CCB=setupCopycat3([],M,L,R,Kact,Bact,0,0,CCwings,spreadScale);
  for i=2:length(CCB), CCB(2)=[]; end                   % erase all but ctrPt 
  resultsFileName=[deblank(wd) scriptName '.txd'];

  % ___ setup output file header ___  
  textappend('OPTIMIZATION ANALYSIS',resultsFileName);       % create a line of text
  textappend(['Patton, 'whenis(clock)],resultsFileName);%
  textappend(['Generated by "' scriptName '"']      ... %
    ,resultsFileName);      % 
  textappend('Data begins below:',resultsFileName);%
  textappend('________',resultsFileName);%
  Str=sprintf(['NumCCB\tCCr\tCCaveErr\tCCfracErr'   ...
              '\tvCCr\tvCCaveErr\tvCCfracErr\telapsedTime']);
  textappend(Str,resultsFileName);  
  
  % ___ determine trials for analysis ___  
  %trialsStruct(2).trials=trialsStruct(2).trials(1:2);   % for debug
  NperturbTrials=length(trialsStruct(2).trials); 
  fprintf('\n%d perturbation trials :',NperturbTrials); 
  fprintf(' %d',trialsStruct(2).trials);
  trialCut=ceil(NperturbTrials/2);                      % find half of the trials
  perturbTrials=trialsStruct(2).trials(1:trialCut);
  validationTrials=                                 ... % 
    trialsStruct(2).trials(trialCut+1:NperturbTrials);
    
  % ___ JACKNIFE LOOP TO FIT & VALIDATE ___
  fprintf('\n\n\n ___ Begin Optimization Fitting: ___: '); 
  for i=1:NperturbTrials                                % jacknife iterations
   if 0% (subject==30&i<18)
    fprintf('skipping analysis on #%d! ',i);
   else
      
    fprintf('\n\n\n\n~~~ Jacknife Iteration %d: ~~~\n(',i);%
    cd
    fprintf(')\n  %d Fitting trials    :',          ... %
     length(perturbTrials)); 
    fprintf(' %d',perturbTrials);
    fprintf('\n  %d Validation trials :',           ... %
     length(validationTrials)); 
    fprintf(' %d',validationTrials);
    
    fprintf('\n\n  Fitting: ');
    tic;  
    [CCB,r,aveErr,fracErr]=OptCC(CCB,CCwings,       ... %
      spreadScale,maxTime,perturbTrials,fitOrNot);
    elapsedTime=toc
  
    fprintf('\n\n  Validation: '); 
    [CCB,Vr,VaveErr,VfracErr]=OptCC(CCB,CCwings,      ... %
    spreadScale,maxTime,validationTrials,~fitOrNot);
  
    Str=sprintf(                                      ... %
     '%d\t%0.5g\t%0.5g\t%0.5g\t%0.5g\t%0.5g\t%0.5g\t%0.5g'... %
     ,length(CCB),r,aveErr,fracErr,Vr,VaveErr,VfracErr... % 
     ,elapsedTime);
    textappend(Str,resultsFileName);
   end % END if (subject==30&i<18)
    perturbTrials=[perturbTrials validationTrials(1)];    % move 1st to end of other list
    validationTrials=[validationTrials perturbTrials(1)]; % move 1st to end of other list
    perturbTrials(1)=[];                                  % clip 1st off
    validationTrials(1)=[];                               % clip 1st off
    
  end % END for i=1:NperturbTrials                        % END jacknife LOOP
  diary off 
  cd ..
end                                                       % END subj LOOP

fprintf('\n\n\n~ END %s SCRIPT ~\n',scriptName)             % title message

assembleCCoptoResults.m